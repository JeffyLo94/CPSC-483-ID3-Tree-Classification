/usr/local/bin/python3.7 "/Applications/PyCharm CE.app/Contents/helpers/pydev/pydevd.py" --multiproc --qt-support=auto --client 127.0.0.1 --port 53256 --file /Users/jeffreylo/PycharmProjects/CPSC-483-ID3-Tree-Classification/id3.py
pydev debugger: process 33179 is connecting

Connected to pydev debugger (build 182.4129.34)

	---------- Performing ID3 for: play, Layer = 0 ----------

	p = 5/14
	p = 9/14
	E(S)= - (0.35714285714285715)log2(0.35714285714285715) - (0.6428571428571429)log2(0.6428571428571429)
	E(S_)= 0.9402859586706311
	Entropy of play indicates information content can be gained

	IG for outlook
{'sunny': 5, 'overcast': 4, 'rainy': 5}
	outlook probabilities: : {'sunny': 0.35714285714285715, 'overcast': 0.2857142857142857, 'rainy': 0.35714285714285715}
	E(S_outlook, sunny)
		total for outlook, sunny: 5
		subset for sunny, no: 3/5 = 0.6
		subset for sunny, yes: 2/5 = 0.4
		E(S)= - (0.6log2(0.6) - (0.4log2(0.4)
	E(S_outlook, sunny)= 0.9709505944546686
	E(S_outlook, overcast)
		total for outlook, overcast: 4
		subset for overcast, no: 0/4 = 0.0
		subset for overcast, yes: 4/4 = 1.0
		ignoring 0 probability
		E(S)= - (1.0log2(1.0)
	E(S_outlook, overcast)= 0.0
	E(S_outlook, rainy)
		total for outlook, rainy: 5
		subset for rainy, no: 2/5 = 0.4
		subset for rainy, yes: 3/5 = 0.6
		E(S)= - (0.4log2(0.4) - (0.6log2(0.6)
	E(S_outlook, rainy)= 0.9709505944546686
	IG(S_play, outlook)= 0.9402859586706311 - (0.35714285714285715)0.9709505944546686 - (0.2857142857142857)0.0 - (0.35714285714285715)0.9709505944546686
	IG(S_play, outlook)= 0.24674981977443933

	IG for humidity
{'high': 7, 'normal': 7}
	humidity probabilities: : {'high': 0.5, 'normal': 0.5}
	E(S_humidity, high)
		total for humidity, high: 7
		subset for high, no: 4/7 = 0.5714285714285714
		subset for high, yes: 3/7 = 0.42857142857142855
		E(S)= - (0.5714285714285714log2(0.5714285714285714) - (0.42857142857142855log2(0.42857142857142855)
	E(S_humidity, high)= 0.9852281360342515
	E(S_humidity, normal)
		total for humidity, normal: 7
		subset for normal, no: 1/7 = 0.14285714285714285
		subset for normal, yes: 6/7 = 0.8571428571428571
		E(S)= - (0.14285714285714285log2(0.14285714285714285) - (0.8571428571428571log2(0.8571428571428571)
	E(S_humidity, normal)= 0.5916727785823275
	IG(S_play, humidity)= 0.9402859586706311 - (0.5)0.9852281360342515 - (0.5)0.5916727785823275
	IG(S_play, humidity)= 0.15183550136234164

	IG for windy
{False: 8, True: 6}
	windy probabilities: : {False: 0.5714285714285714, True: 0.42857142857142855}
	E(S_windy, False)
		total for windy, False: 8
		subset for False, no: 2/8 = 0.25
		subset for False, yes: 6/8 = 0.75
		E(S)= - (0.25log2(0.25) - (0.75log2(0.75)
	E(S_windy, False)= 0.8112781244591328
	E(S_windy, True)
		total for windy, True: 6
		subset for True, no: 3/6 = 0.5
		subset for True, yes: 3/6 = 0.5
		E(S)= - (0.5log2(0.5) - (0.5log2(0.5)
	E(S_windy, True)= 1.0
	IG(S_play, windy)= 0.9402859586706311 - (0.5714285714285714)0.8112781244591328 - (0.42857142857142855)1.0
	IG(S_play, windy)= 0.048127030408269544

	Info Gains:
		outlook: 0.24674981977443933
		humidity: 0.15183550136234164
		windy: 0.048127030408269544
	Greatest IG is outlook
	Adding outlook as root


------------ R E S U L T I N G  T R E E ------------
Node('/outlook')
possible Children['sunny', 'overcast', 'rainy']


	----- Creating subset for branch sunny -----
  outlook humidity  windy play
0   sunny     high  False   no
1   sunny     high   True   no
2   sunny     high  False   no
3   sunny   normal  False  yes
4   sunny   normal   True  yes
Labels to use: ['humidity', 'windy', 'play']

		---------- Performing ID3 for: outlook_sunny, Layer = 1 ----------

		p = 3/5
		p = 2/5
		E(S)= - (0.6)log2(0.6) - (0.4)log2(0.4)
		E(S_outlook_sunny)= 0.9709505944546686
		Entropy of play indicates information content can be gained

		IG for humidity
{'high': 3, 'normal': 2}
		humidity probabilities: : {'high': 0.21428571428571427, 'normal': 0.14285714285714285}
		E(S_humidity, high)
			total for humidity, high: 3
			subset for high, no: 3/3 = 1.0
			subset for high, yes: 0/3 = 0.0
			ignoring 0 probability
			E(S)= - (1.0log2(1.0)
		E(S_humidity, high)= 0.0
		E(S_humidity, normal)
			total for humidity, normal: 2
			subset for normal, no: 0/2 = 0.0
			subset for normal, yes: 2/2 = 1.0
			ignoring 0 probability
			E(S)= - (1.0log2(1.0)
		E(S_humidity, normal)= 0.0
		IG(S_play, humidity)= 0.9709505944546686 - (0.21428571428571427)0.0 - (0.14285714285714285)0.0
		IG(S_play, humidity)= 0.9709505944546686

		IG for windy
{False: 3, True: 2}
		windy probabilities: : {False: 0.21428571428571427, True: 0.14285714285714285}
		E(S_windy, False)
			total for windy, False: 3
			subset for False, no: 2/3 = 0.6666666666666666
			subset for False, yes: 1/3 = 0.3333333333333333
			E(S)= - (0.6666666666666666log2(0.6666666666666666) - (0.3333333333333333log2(0.3333333333333333)
		E(S_windy, False)= 0.9182958340544896
		E(S_windy, True)
			total for windy, True: 2
			subset for True, no: 1/2 = 0.5
			subset for True, yes: 1/2 = 0.5
			E(S)= - (0.5log2(0.5) - (0.5log2(0.5)
		E(S_windy, True)= 1.0
		IG(S_play, windy)= 0.9709505944546686 - (0.21428571428571427)0.9182958340544896 - (0.14285714285714285)1.0
		IG(S_play, windy)= 0.6313157728715637

		Info Gains:
			humidity: 0.9709505944546686
			windy: 0.6313157728715637
		Greatest IG is humidity
		Adding humidity to tree


------------ R E S U L T I N G  T R E E ------------
Node('/outlook')
└── Node('/outlook/sunny')
    └── Node('/outlook/sunny/humidity')
possible Children['high', 'normal']


		----- Creating subset for branch high -----
  humidity  windy play
0     high  False   no
1     high   True   no
2     high  False   no
Labels to use: ['windy', 'play']

			---------- Performing ID3 for: humidity_high, Layer = 2 ----------

			p = 3/3
			E(S)= - (1.0)log2(1.0)
			E(S_humidity_high)= 0.0
			No information to gain from this set

			leaf node 'no' added to branch high


------------ R E S U L T I N G  T R E E ------------
Node('/outlook')
└── Node('/outlook/sunny')
    └── Node('/outlook/sunny/humidity')
        └── Node('/outlook/sunny/humidity/high')
            └── Node('/outlook/sunny/humidity/high/no')


		----- Creating subset for branch normal -----
  humidity  windy play
0   normal  False  yes
1   normal   True  yes
Labels to use: ['windy', 'play']

			---------- Performing ID3 for: humidity_normal, Layer = 2 ----------

			p = 2/2
			E(S)= - (1.0)log2(1.0)
			E(S_humidity_normal)= 0.0
			No information to gain from this set

			leaf node 'yes' added to branch normal


------------ R E S U L T I N G  T R E E ------------
Node('/outlook')
└── Node('/outlook/sunny')
    └── Node('/outlook/sunny/humidity')
        ├── Node('/outlook/sunny/humidity/high')
        │   └── Node('/outlook/sunny/humidity/high/no')
        └── Node('/outlook/sunny/humidity/normal')
            └── Node('/outlook/sunny/humidity/normal/yes')


	----- Creating subset for branch overcast -----
    outlook humidity  windy play
0  overcast     high  False  yes
1  overcast   normal   True  yes
2  overcast     high   True  yes
3  overcast   normal  False  yes
Labels to use: ['humidity', 'windy', 'play']

		---------- Performing ID3 for: outlook_overcast, Layer = 1 ----------

		p = 4/4
		E(S)= - (1.0)log2(1.0)
		E(S_outlook_overcast)= 0.0
		No information to gain from this set

		leaf node 'yes' added to branch overcast


------------ R E S U L T I N G  T R E E ------------
Node('/outlook')
├── Node('/outlook/sunny')
│   └── Node('/outlook/sunny/humidity')
│       ├── Node('/outlook/sunny/humidity/high')
│       │   └── Node('/outlook/sunny/humidity/high/no')
│       └── Node('/outlook/sunny/humidity/normal')
│           └── Node('/outlook/sunny/humidity/normal/yes')
└── Node('/outlook/overcast')
    └── Node('/outlook/overcast/yes')


	----- Creating subset for branch rainy -----
  outlook humidity  windy play
0   rainy     high  False  yes
1   rainy   normal  False  yes
2   rainy   normal   True   no
3   rainy   normal  False  yes
4   rainy     high   True   no
Labels to use: ['humidity', 'windy', 'play']

		---------- Performing ID3 for: outlook_rainy, Layer = 1 ----------

		p = 3/5
		p = 2/5
		E(S)= - (0.6)log2(0.6) - (0.4)log2(0.4)
		E(S_outlook_rainy)= 0.9709505944546686
		Entropy of play indicates information content can be gained

		IG for humidity
{'high': 2, 'normal': 3}
		humidity probabilities: : {'high': 0.14285714285714285, 'normal': 0.21428571428571427}
		E(S_humidity, high)
			total for humidity, high: 2
			subset for high, yes: 1/2 = 0.5
			subset for high, no: 1/2 = 0.5
			E(S)= - (0.5log2(0.5) - (0.5log2(0.5)
		E(S_humidity, high)= 1.0
		E(S_humidity, normal)
			total for humidity, normal: 3
			subset for normal, yes: 2/3 = 0.6666666666666666
			subset for normal, no: 1/3 = 0.3333333333333333
			E(S)= - (0.6666666666666666log2(0.6666666666666666) - (0.3333333333333333log2(0.3333333333333333)
		E(S_humidity, normal)= 0.9182958340544896
		IG(S_play, humidity)= 0.9709505944546686 - (0.14285714285714285)1.0 - (0.21428571428571427)0.9182958340544896
		IG(S_play, humidity)= 0.6313157728715637

		IG for windy
{False: 3, True: 2}
		windy probabilities: : {False: 0.21428571428571427, True: 0.14285714285714285}
		E(S_windy, False)
			total for windy, False: 3
			subset for False, yes: 3/3 = 1.0
			subset for False, no: 0/3 = 0.0
			ignoring 0 probability
			E(S)= - (1.0log2(1.0)
		E(S_windy, False)= 0.0
		E(S_windy, True)
			total for windy, True: 2
			subset for True, yes: 0/2 = 0.0
			subset for True, no: 2/2 = 1.0
			ignoring 0 probability
			E(S)= - (1.0log2(1.0)
		E(S_windy, True)= 0.0
		IG(S_play, windy)= 0.9709505944546686 - (0.21428571428571427)0.0 - (0.14285714285714285)0.0
		IG(S_play, windy)= 0.9709505944546686

		Info Gains:
			humidity: 0.6313157728715637
			windy: 0.9709505944546686
		Greatest IG is windy
		Adding windy to tree


------------ R E S U L T I N G  T R E E ------------
Node('/outlook')
├── Node('/outlook/sunny')
│   └── Node('/outlook/sunny/humidity')
│       ├── Node('/outlook/sunny/humidity/high')
│       │   └── Node('/outlook/sunny/humidity/high/no')
│       └── Node('/outlook/sunny/humidity/normal')
│           └── Node('/outlook/sunny/humidity/normal/yes')
├── Node('/outlook/overcast')
│   └── Node('/outlook/overcast/yes')
└── Node('/outlook/rainy')
    └── Node('/outlook/rainy/windy')
possible Children[False, True]


		----- Creating subset for branch False -----
  humidity  windy play
0     high  False  yes
1   normal  False  yes
2   normal  False  yes
Labels to use: ['humidity', 'play']

			---------- Performing ID3 for: windy_False, Layer = 2 ----------

			p = 3/3
			E(S)= - (1.0)log2(1.0)
			E(S_windy_False)= 0.0
			No information to gain from this set

			leaf node 'yes' added to branch False


------------ R E S U L T I N G  T R E E ------------
Node('/outlook')
├── Node('/outlook/sunny')
│   └── Node('/outlook/sunny/humidity')
│       ├── Node('/outlook/sunny/humidity/high')
│       │   └── Node('/outlook/sunny/humidity/high/no')
│       └── Node('/outlook/sunny/humidity/normal')
│           └── Node('/outlook/sunny/humidity/normal/yes')
├── Node('/outlook/overcast')
│   └── Node('/outlook/overcast/yes')
└── Node('/outlook/rainy')
    └── Node('/outlook/rainy/windy')
        └── Node('/outlook/rainy/windy/False')
            └── Node('/outlook/rainy/windy/False/yes')


		----- Creating subset for branch True -----
  humidity  windy play
0   normal   True   no
1     high   True   no
Labels to use: ['humidity', 'play']

			---------- Performing ID3 for: windy_True, Layer = 2 ----------

			p = 2/2
			E(S)= - (1.0)log2(1.0)
			E(S_windy_True)= 0.0
			No information to gain from this set

			leaf node 'no' added to branch True


------------ R E S U L T I N G  T R E E ------------
Node('/outlook')
├── Node('/outlook/sunny')
│   └── Node('/outlook/sunny/humidity')
│       ├── Node('/outlook/sunny/humidity/high')
│       │   └── Node('/outlook/sunny/humidity/high/no')
│       └── Node('/outlook/sunny/humidity/normal')
│           └── Node('/outlook/sunny/humidity/normal/yes')
├── Node('/outlook/overcast')
│   └── Node('/outlook/overcast/yes')
└── Node('/outlook/rainy')
    └── Node('/outlook/rainy/windy')
        ├── Node('/outlook/rainy/windy/False')
        │   └── Node('/outlook/rainy/windy/False/yes')
        └── Node('/outlook/rainy/windy/True')
            └── Node('/outlook/rainy/windy/True/no')

